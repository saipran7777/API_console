(function(mod){if("object"==("undefined"===typeof exports?"undefined":babelHelpers.typeof(exports))&&"object"==("undefined"===typeof module?"undefined":babelHelpers.typeof(module)))mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)define(["../../lib/codemirror"],mod);else mod(CodeMirror)})(function(CodeMirror){"use strict";CodeMirror.defineMode("cmake",function(){var variable_regex=/({)?[a-zA-Z0-9_]+(})?/;function tokenString(stream,state){var current,prev,found_var=!1;while(!stream.eol()&&(current=stream.next())!=state.pending){if("$"===current&&"\\"!=prev&&"\""==state.pending){found_var=!0;break}prev=current}if(found_var){stream.backUp(1)}if(current==state.pending){state.continueString=!1}else{state.continueString=!0}return"string"}function tokenize(stream,state){var ch=stream.next();if("$"===ch){if(stream.match(variable_regex)){return"variable-2"}return"variable"}if(state.continueString){stream.backUp(1);return tokenString(stream,state)}if(stream.match(/(\s+)?\w+\(/)||stream.match(/(\s+)?\w+\ \(/)){stream.backUp(1);return"def"}if("#"==ch){stream.skipToEnd();return"comment"}if("'"==ch||"\""==ch){state.pending=ch;return tokenString(stream,state)}if("("==ch||")"==ch){return"bracket"}if(ch.match(/[0-9]/)){return"number"}stream.eatWhile(/[\w-]/);return null}return{startState:function startState(){return{inDefinition:!1,inInclude:!1,continueString:!1,pending:!1}},token:function token(stream,state){if(stream.eatSpace())return null;return tokenize(stream,state)}}});CodeMirror.defineMIME("text/x-cmake","cmake")});