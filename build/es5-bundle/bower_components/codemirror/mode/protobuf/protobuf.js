(function(mod){if("object"==("undefined"===typeof exports?"undefined":babelHelpers.typeof(exports))&&"object"==("undefined"===typeof module?"undefined":babelHelpers.typeof(module)))mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)define(["../../lib/codemirror"],mod);else mod(CodeMirror)})(function(CodeMirror){"use strict";var keywordArray=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64","option","service","rpc","returns"],keywords=function(words){return new RegExp("^(("+words.join(")|(")+"))\\b","i")}(keywordArray);CodeMirror.registerHelper("hintWords","protobuf",keywordArray);var identifiers=/^[_A-Za-z¡-￿][_A-Za-z0-9¡-￿]*/;function tokenBase(stream){if(stream.eatSpace())return null;if(stream.match("//")){stream.skipToEnd();return"comment"}if(stream.match(/^[0-9\.+-]/,!1)){if(stream.match(/^[+-]?0x[0-9a-fA-F]+/))return"number";if(stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))return"number";if(stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))return"number"}if(stream.match(/^"([^"]|(""))*"/)){return"string"}if(stream.match(/^'([^']|(''))*'/)){return"string"}if(stream.match(keywords)){return"keyword"}if(stream.match(identifiers)){return"variable"}stream.next();return null}CodeMirror.defineMode("protobuf",function(){return{token:tokenBase}});CodeMirror.defineMIME("text/x-protobuf","protobuf")});