(function(mod){if("object"==("undefined"===typeof exports?"undefined":babelHelpers.typeof(exports))&&"object"==("undefined"===typeof module?"undefined":babelHelpers.typeof(module)))mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)define(["../../lib/codemirror"],mod);else mod(CodeMirror)})(function(CodeMirror){"use strict";function forEach(arr,f){for(var i=0;i<arr.length;i++){f(arr[i],i)}}function some(arr,f){for(var i=0;i<arr.length;i++){if(f(arr[i],i))return!0}return!1}CodeMirror.defineMode("dylan",function(){var words={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};words.otherDefinition=words.unnamedDefinition.concat(words.namedDefinition).concat(words.otherParameterizedDefinition);words.definition=words.typeParameterizedDefinition.concat(words.otherDefinition);words.parameterizedDefinition=words.typeParameterizedDefinition.concat(words.otherParameterizedDefinition);words.simpleDefinition=words.constantSimpleDefinition.concat(words.variableSimpleDefinition).concat(words.otherSimpleDefinition);words.keyword=words.statement.concat(words.separator).concat(words.other);var symbolPattern="[-_a-zA-Z?!*@<>$%]+",symbol=/^[-_a-zA-Z?!*@<>$%]+/,patterns={symbolKeyword:symbolPattern+":",symbolClass:"<"+symbolPattern+">",symbolGlobal:"\\*"+symbolPattern+"\\*",symbolConstant:"\\$"+symbolPattern},patternStyles={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var patternName in patterns){if(patterns.hasOwnProperty(patternName))patterns[patternName]=new RegExp("^"+patterns[patternName])}patterns.keyword=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var styles={keyword:"keyword",definition:"def",simpleDefinition:"def",signalingCalls:"builtin"},wordLookup={},styleLookup={};forEach(["keyword","definition","simpleDefinition","signalingCalls"],function(type){forEach(words[type],function(word){wordLookup[word]=type;styleLookup[word]=styles[type]})});function chain(stream,state,f){state.tokenize=f;return f(stream,state)}function tokenBase(stream,state){var ch=stream.peek();if("'"==ch||"\""==ch){stream.next();return chain(stream,state,tokenString(ch,"string"))}else if("/"==ch){stream.next();if(stream.eat("*")){return chain(stream,state,tokenComment)}else if(stream.eat("/")){stream.skipToEnd();return"comment"}stream.backUp(1)}else if(/[+\-\d\.]/.test(ch)){if(stream.match(/^[+-]?[0-9]*\.[0-9]*([esdx][+-]?[0-9]+)?/i)||stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i)||stream.match(/^[+-]?\d+/)){return"number"}}else if("#"==ch){stream.next();ch=stream.peek();if("\""==ch){stream.next();return chain(stream,state,tokenString("\"","string"))}else if("b"==ch){stream.next();stream.eatWhile(/[01]/);return"number"}else if("x"==ch){stream.next();stream.eatWhile(/[\da-f]/i);return"number"}else if("o"==ch){stream.next();stream.eatWhile(/[0-7]/);return"number"}else if("#"==ch){stream.next();return"punctuation"}else if("["==ch||"("==ch){stream.next();return"bracket"}else if(stream.match(/f|t|all-keys|include|key|next|rest/i)){return"atom"}else{stream.eatWhile(/[-a-zA-Z]/);return"error"}}else if("~"==ch){stream.next();ch=stream.peek();if("="==ch){stream.next();ch=stream.peek();if("="==ch){stream.next();return"operator"}return"operator"}return"operator"}else if(":"==ch){stream.next();ch=stream.peek();if("="==ch){stream.next();return"operator"}else if(":"==ch){stream.next();return"punctuation"}}else if(-1!="[](){}".indexOf(ch)){stream.next();return"bracket"}else if(-1!=".,".indexOf(ch)){stream.next();return"punctuation"}else if(stream.match("end")){return"keyword"}for(var name in patterns){if(patterns.hasOwnProperty(name)){var pattern=patterns[name];if(babelHelpers.instanceof(pattern,Array)&&some(pattern,function(p){return stream.match(p)})||stream.match(pattern))return patternStyles[name]}}if(/[+\-*\/^=<>&|]/.test(ch)){stream.next();return"operator"}if(stream.match("define")){return"def"}else{stream.eatWhile(/[\w\-]/);if(wordLookup.hasOwnProperty(stream.current())){return styleLookup[stream.current()]}else if(stream.current().match(symbol)){return"variable"}else{stream.next();return"variable-2"}}}function tokenComment(stream,state){var maybeEnd=!1,maybeNested=!1,nestedCount=0,ch;while(ch=stream.next()){if("/"==ch&&maybeEnd){if(0<nestedCount){nestedCount--}else{state.tokenize=tokenBase;break}}else if("*"==ch&&maybeNested){nestedCount++}maybeEnd="*"==ch;maybeNested="/"==ch}return"comment"}function tokenString(quote,style){return function(stream,state){var escaped=!1,next,end=!1;while(null!=(next=stream.next())){if(next==quote&&!escaped){end=!0;break}escaped=!escaped&&"\\"==next}if(end||!escaped){state.tokenize=tokenBase}return style}}return{startState:function startState(){return{tokenize:tokenBase,currentIndent:0}},token:function token(stream,state){if(stream.eatSpace())return null;var style=state.tokenize(stream,state);return style},blockCommentStart:"/*",blockCommentEnd:"*/"}});CodeMirror.defineMIME("text/x-dylan","dylan")});