Prism.languages["markup-templating"]={};Object.defineProperties(Prism.languages["markup-templating"],{buildPlaceholders:{value:function value(env,language,placeholderPattern,replaceFilter){if(env.language!==language){return}env.tokenStack=[];env.code=env.code.replace(placeholderPattern,function(match){if("function"===typeof replaceFilter&&!replaceFilter(match)){return match}var i=env.tokenStack.length;while(-1!==env.code.indexOf("___"+language.toUpperCase()+i+"___")){++i}env.tokenStack[i]=match;return"___"+language.toUpperCase()+i+"___"});env.grammar=Prism.languages.markup}},tokenizePlaceholders:{value:function value(env,language){if(env.language!==language||!env.tokenStack){return}env.grammar=Prism.languages[language];var j=0,keys=Object.keys(env.tokenStack),walkTokens=function(tokens){if(j>=keys.length){return}for(var i=0,token;i<tokens.length;i++){token=tokens[i];if("string"===typeof token||token.content&&"string"===typeof token.content){var k=keys[j],t=env.tokenStack[k],s="string"===typeof token?token:token.content,index=s.indexOf("___"+language.toUpperCase()+k+"___");if(-1<index){++j;var before=s.substring(0,index),middle=new Prism.Token(language,Prism.tokenize(t,env.grammar,language),"language-"+language,t),after=s.substring(index+("___"+language.toUpperCase()+k+"___").length),replacement;if(before||after){replacement=[before,middle,after].filter(function(v){return!!v});walkTokens(replacement)}else{replacement=middle}if("string"===typeof token){Array.prototype.splice.apply(tokens,[i,1].concat(replacement))}else{token.content=replacement}if(j>=keys.length){break}}}else if(token.content&&"string"!==typeof token.content){walkTokens(token.content)}}};walkTokens(env.tokens)}}});