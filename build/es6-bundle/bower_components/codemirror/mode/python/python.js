(function(mod){if("object"==typeof exports&&"object"==typeof module)mod(require("../../lib/codemirror"));else if("function"==typeof define&&define.amd)define(["../../lib/codemirror"],mod);else mod(CodeMirror)})(function(CodeMirror){"use strict";function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b")}var wordOperators=wordRegexp(["and","or","not","is"]),commonKeywords=["as","assert","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","lambda","pass","raise","return","try","while","with","yield","in"],commonBuiltins=["abs","all","any","bin","bool","bytearray","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip","__import__","NotImplemented","Ellipsis","__debug__"];CodeMirror.registerHelper("hintWords","python",commonKeywords.concat(commonBuiltins));function top(state){return state.scopes[state.scopes.length-1]}CodeMirror.defineMode("python",function(conf,parserConf){for(var ERRORCLASS="error",delimiters=parserConf.delimiters||parserConf.singleDelimiters||/^[\(\)\[\]\{\}@,:`=;\.\\]/,operators=[parserConf.singleOperators,parserConf.doubleOperators,parserConf.doubleDelimiters,parserConf.tripleDelimiters,parserConf.operators||/^([-+*/%\/&|^]=?|[<>=]+|\/\/=?|\*\*=?|!=|[~!@])/],i=0;i<operators.length;i++)if(!operators[i])operators.splice(i--,1);var hangingIndent=parserConf.hangingIndent||conf.indentUnit,myKeywords=commonKeywords,myBuiltins=commonBuiltins;if(parserConf.extra_keywords!=void 0)myKeywords=myKeywords.concat(parserConf.extra_keywords);if(parserConf.extra_builtins!=void 0)myBuiltins=myBuiltins.concat(parserConf.extra_builtins);var py3=!(parserConf.version&&3>+parserConf.version);if(py3){var identifiers=parserConf.identifiers||/^[_A-Za-z\u00A1-\uFFFF][_A-Za-z0-9\u00A1-\uFFFF]*/;myKeywords=myKeywords.concat(["nonlocal","False","True","None","async","await"]);myBuiltins=myBuiltins.concat(["ascii","bytes","exec","print"]);var stringPrefixes=/^(([rbuf]|(br)|(fr))?('{3}|"{3}|['"]))/i}else{var identifiers=parserConf.identifiers||/^[_A-Za-z][_A-Za-z0-9]*/;myKeywords=myKeywords.concat(["exec","print"]);myBuiltins=myBuiltins.concat(["apply","basestring","buffer","cmp","coerce","execfile","file","intern","long","raw_input","reduce","reload","unichr","unicode","xrange","False","True","None"]);var stringPrefixes=/^(([rubf]|(ur)|(br))?('{3}|"{3}|['"]))/i}var keywords=wordRegexp(myKeywords),builtins=wordRegexp(myBuiltins);function tokenBase(stream,state){var sol=stream.sol()&&"\\"!=state.lastToken;if(sol)state.indent=stream.indentation();if(sol&&"py"==top(state).type){var scopeOffset=top(state).offset;if(stream.eatSpace()){var lineOffset=stream.indentation();if(lineOffset>scopeOffset)pushPyScope(state);else if(lineOffset<scopeOffset&&dedent(stream,state)&&"#"!=stream.peek())state.errorToken=!0;return null}else{var style=tokenBaseInner(stream,state);if(0<scopeOffset&&dedent(stream,state))style+=" "+ERRORCLASS;return style}}return tokenBaseInner(stream,state)}function tokenBaseInner(stream,state){if(stream.eatSpace())return null;if(stream.match(/^#.*/))return"comment";if(stream.match(/^[0-9\.]/,!1)){var floatLiteral=!1;if(stream.match(/^[\d_]*\.\d+(e[\+\-]?\d+)?/i)){floatLiteral=!0}if(stream.match(/^[\d_]+\.\d*/)){floatLiteral=!0}if(stream.match(/^\.\d+/)){floatLiteral=!0}if(floatLiteral){stream.eat(/J/i);return"number"}var intLiteral=!1;if(stream.match(/^0x[0-9a-f_]+/i))intLiteral=!0;if(stream.match(/^0b[01_]+/i))intLiteral=!0;if(stream.match(/^0o[0-7_]+/i))intLiteral=!0;if(stream.match(/^[1-9][\d_]*(e[\+\-]?[\d_]+)?/)){stream.eat(/J/i);intLiteral=!0}if(stream.match(/^0(?![\dx])/i))intLiteral=!0;if(intLiteral){stream.eat(/L/i);return"number"}}if(stream.match(stringPrefixes)){var isFmtString=-1!==stream.current().toLowerCase().indexOf("f");if(!isFmtString){state.tokenize=tokenStringFactory(stream.current());return state.tokenize(stream,state)}else{state.tokenize=formatStringFactory(stream.current(),state.tokenize);return state.tokenize(stream,state)}}for(var i=0;i<operators.length;i++)if(stream.match(operators[i]))return"operator";if(stream.match(delimiters))return"punctuation";if("."==state.lastToken&&stream.match(identifiers))return"property";if(stream.match(keywords)||stream.match(wordOperators))return"keyword";if(stream.match(builtins))return"builtin";if(stream.match(/^(self|cls)\b/))return"variable-2";if(stream.match(identifiers)){if("def"==state.lastToken||"class"==state.lastToken)return"def";return"variable"}stream.next();return ERRORCLASS}function formatStringFactory(delimiter,tokenOuter){while(0<="rubf".indexOf(delimiter.charAt(0).toLowerCase()))delimiter=delimiter.substr(1);var singleline=1==delimiter.length,OUTCLASS="string";function tokenFString(stream,state){if(stream.match(delimiter)){state.tokenize=tokenString;return OUTCLASS}else if(stream.match("{")){return"punctuation"}else if(stream.match("}")){state.tokenize=tokenString;return"punctuation"}else{return tokenBaseInner(stream,state)}}function tokenString(stream,state){while(!stream.eol()){stream.eatWhile(/[^'"\{\}\\]/);if(stream.eat("\\")){stream.next();if(singleline&&stream.eol())return OUTCLASS}else if(stream.match(delimiter)){state.tokenize=tokenOuter;return OUTCLASS}else if(stream.match("{{")){return OUTCLASS}else if(stream.match("{",!1)){state.tokenize=tokenFString;if(stream.current()){return OUTCLASS}else{stream.next();return"punctuation"}}else if(stream.match("}}")){return OUTCLASS}else if(stream.match("}")){return ERRORCLASS}else{stream.eat(/['"]/)}}if(singleline){if(parserConf.singleLineStringErrors)return ERRORCLASS;else state.tokenize=tokenOuter}return OUTCLASS}tokenString.isString=!0;return tokenString}function tokenStringFactory(delimiter){while(0<="rubf".indexOf(delimiter.charAt(0).toLowerCase()))delimiter=delimiter.substr(1);var singleline=1==delimiter.length,OUTCLASS="string";function tokenString(stream,state){while(!stream.eol()){stream.eatWhile(/[^'"\\]/);if(stream.eat("\\")){stream.next();if(singleline&&stream.eol())return OUTCLASS}else if(stream.match(delimiter)){state.tokenize=tokenBase;return OUTCLASS}else{stream.eat(/['"]/)}}if(singleline){if(parserConf.singleLineStringErrors)return ERRORCLASS;else state.tokenize=tokenBase}return OUTCLASS}tokenString.isString=!0;return tokenString}function pushPyScope(state){while("py"!=top(state).type)state.scopes.pop();state.scopes.push({offset:top(state).offset+conf.indentUnit,type:"py",align:null})}function pushBracketScope(stream,state,type){var align=stream.match(/^([\s\[\{\(]|#.*)*$/,!1)?null:stream.column()+1;state.scopes.push({offset:state.indent+hangingIndent,type:type,align:align})}function dedent(stream,state){var indented=stream.indentation();while(1<state.scopes.length&&top(state).offset>indented){if("py"!=top(state).type)return!0;state.scopes.pop()}return top(state).offset!=indented}function tokenLexer(stream,state){if(stream.sol())state.beginningOfLine=!0;var style=state.tokenize(stream,state),current=stream.current();if(state.beginningOfLine&&"@"==current)return stream.match(identifiers,!1)?"meta":py3?"operator":ERRORCLASS;if(/\S/.test(current))state.beginningOfLine=!1;if(("variable"==style||"builtin"==style)&&"meta"==state.lastToken)style="meta";if("pass"==current||"return"==current)state.dedent+=1;if("lambda"==current)state.lambda=!0;if(":"==current&&!state.lambda&&"py"==top(state).type)pushPyScope(state);if(1==current.length&&!/string|comment/.test(style)){var delimiter_index="[({".indexOf(current);if(-1!=delimiter_index)pushBracketScope(stream,state,"])}".slice(delimiter_index,delimiter_index+1));delimiter_index="])}".indexOf(current);if(-1!=delimiter_index){if(top(state).type==current)state.indent=state.scopes.pop().offset-hangingIndent;else return ERRORCLASS}}if(0<state.dedent&&stream.eol()&&"py"==top(state).type){if(1<state.scopes.length)state.scopes.pop();state.dedent-=1}return style}var external={startState:function(basecolumn){return{tokenize:tokenBase,scopes:[{offset:basecolumn||0,type:"py",align:null}],indent:basecolumn||0,lastToken:null,lambda:!1,dedent:0}},token:function(stream,state){var addErr=state.errorToken;if(addErr)state.errorToken=!1;var style=tokenLexer(stream,state);if(style&&"comment"!=style)state.lastToken="keyword"==style||"punctuation"==style?stream.current():style;if("punctuation"==style)style=null;if(stream.eol()&&state.lambda)state.lambda=!1;return addErr?style+" "+ERRORCLASS:style},indent:function(state,textAfter){if(state.tokenize!=tokenBase)return state.tokenize.isString?CodeMirror.Pass:0;var scope=top(state),closing=scope.type==textAfter.charAt(0);if(null!=scope.align)return scope.align-(closing?1:0);else return scope.offset-(closing?hangingIndent:0)},electricInput:/^\s*[\}\]\)]$/,closeBrackets:{triples:"'\""},lineComment:"#",fold:"indent"};return external});CodeMirror.defineMIME("text/x-python","python");CodeMirror.defineMIME("text/x-cython",{name:"python",extra_keywords:function(str){return str.split(" ")}("by cdef cimport cpdef ctypedef enum except "+"extern gil include nogil property public "+"readonly struct union DEF IF ELIF ELSE")})});